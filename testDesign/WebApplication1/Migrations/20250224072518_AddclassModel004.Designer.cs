// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1;

#nullable disable

namespace testDesign.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250224072518_AddclassModel004")]
    partial class AddclassModel004
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebApplication1.Models.userModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<int>("isLock")
                        .HasColumnType("int");

                    b.Property<int>("level")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phoneNum")
                        .HasColumnType("longtext");

                    b.Property<string>("useName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("userModel");
                });

            modelBuilder.Entity("testDesign.Models.classModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("contentid")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("contentsnum")
                        .HasColumnType("int");

                    b.Property<int>("eyes")
                        .HasColumnType("int");

                    b.Property<string>("goodsid")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("useid")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("x")
                        .HasColumnType("double");

                    b.Property<double>("y")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.ToTable("classModels");
                });

            modelBuilder.Entity("testDesign.Models.contentModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Commnet")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Useid")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("classModelid")
                        .HasColumnType("int");

                    b.Property<string>("contentid")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("goodsid")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("classModelid");

                    b.ToTable("contentModels");
                });

            modelBuilder.Entity("testDesign.Models.emailVerificationCodeCheck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("emailVerificationCodeChecks");
                });

            modelBuilder.Entity("testDesign.Models.goodModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("bads")
                        .HasColumnType("int");

                    b.Property<int?>("classModelid")
                        .HasColumnType("int");

                    b.Property<int?>("contentModelid")
                        .HasColumnType("int");

                    b.Property<int>("goods")
                        .HasColumnType("int");

                    b.Property<DateTime>("goodsDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("useid")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("classModelid");

                    b.HasIndex("contentModelid");

                    b.ToTable("goodModels");
                });

            modelBuilder.Entity("testDesign.Models.contentModel", b =>
                {
                    b.HasOne("testDesign.Models.classModel", null)
                        .WithMany("contents")
                        .HasForeignKey("classModelid");
                });

            modelBuilder.Entity("testDesign.Models.goodModel", b =>
                {
                    b.HasOne("testDesign.Models.classModel", null)
                        .WithMany("goods")
                        .HasForeignKey("classModelid");

                    b.HasOne("testDesign.Models.contentModel", null)
                        .WithMany("goods")
                        .HasForeignKey("contentModelid");
                });

            modelBuilder.Entity("testDesign.Models.classModel", b =>
                {
                    b.Navigation("contents");

                    b.Navigation("goods");
                });

            modelBuilder.Entity("testDesign.Models.contentModel", b =>
                {
                    b.Navigation("goods");
                });
#pragma warning restore 612, 618
        }
    }
}
